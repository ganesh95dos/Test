PVC

    aws iam list-roles --query "Roles[?contains(RoleName, 'EBS')].RoleName"
[
    "AmazonEKS_EBS_CSI_DriverRole" >> if is not showing
]

aws eks describe-cluster \
  --name my-TWS-EKS-cluster \
  --query "cluster.identity.oidc.issuer" \
  --output text

https://oidc.eks.ap-south-1.amazonaws.com/id/C55D04CB69BFEA846BA2C84E017B59A4

ganesh@ganesh-VMware-Virtual-Platform:~/Downloads/ganesh/terraform-eks-cluster$ kubectl apply -f ebs-sc.yaml
storageclass.storage.k8s.io/ebs-sc created

✅ Solution — Create a CSI-compatible StorageClass

Create a new file ebs-sc.yaml with the following:

apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: ebs-sc
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
provisioner: ebs.csi.aws.com
parameters:
  type: gp2
  fsType: ext4
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Delete

Apply it:

kubectl apply -f ebs-sc.yaml

✅ Update your PVC to use the new CSI-compatible StorageClass

Update your PersistentVolumeClaim (YAML) like this:

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: h2-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: ebs-sc
  resources:
    requests:
      storage: 5Gi

Re-apply:

kubectl delete pvc h2-pvc
kubectl apply -f your-updated-pvc.yaml

kubectl get pvc h2-pvc

✅ Final Check

After applying the new StorageClass and PVC:

kubectl get pvc h2-pvc
